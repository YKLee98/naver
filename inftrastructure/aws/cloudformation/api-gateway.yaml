# infrastructure/aws/cloudformation/api-gateway.yaml
AWSTemplateFormatVersion: '2010-09-09'
Description: 'API Gateway Configuration'

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name prefix
  
  DomainName:
    Type: String
    Description: Custom domain name
    Default: ""
  
  CertificateArn:
    Type: String
    Description: ACM Certificate ARN
    Default: ""
  
  WebhookLambdaArn:
    Type: String
    Description: Webhook Handler Lambda ARN
  
  ALBDNSName:
    Type: String
    Description: ALB DNS Name

Resources:
  # API Gateway
  RestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${EnvironmentName}-api
      Description: Hallyu-Pomaholic Sync System API
      EndpointConfiguration:
        Types:
          - REGIONAL

  # Resources
  WebhookResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestAPI
      ParentId: !GetAtt RestAPI.RootResourceId
      PathPart: webhooks

  ShopifyWebhookResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestAPI
      ParentId: !Ref WebhookResource
      PathPart: shopify

  ProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestAPI
      ParentId: !GetAtt RestAPI.RootResourceId
      PathPart: '{proxy+}'

  # Methods
  ShopifyWebhookMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestAPI
      ResourceId: !Ref ShopifyWebhookResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebhookLambdaArn}/invocations
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty

  ProxyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestAPI
      ResourceId: !Ref ProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.proxy: true
      Integration:
        Type: HTTP_PROXY
        IntegrationHttpMethod: ANY
        Uri: !Sub http://${ALBDNSName}/{proxy}
        RequestParameters:
          integration.request.path.proxy: method.request.path.proxy
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200

  # Lambda Permissions
  WebhookLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WebhookLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPI}/*/*

  # Deployment
  APIDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ShopifyWebhookMethod
      - ProxyMethod
    Properties:
      RestApiId: !Ref RestAPI
      Description: !Sub ${EnvironmentName} deployment

  # Stage
  APIStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: !Ref EnvironmentName
      RestApiId: !Ref RestAPI
      DeploymentId: !Ref APIDeployment
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          LoggingLevel: INFO
          DataTraceEnabled: true
          MetricsEnabled: true
      Variables:
        environment: !Ref EnvironmentName

  # Usage Plan
  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: !Sub ${EnvironmentName}-usage-plan
      Description: Usage plan for API
      ApiStages:
        - ApiId: !Ref RestAPI
          Stage: !Ref APIStage
      Throttle:
        BurstLimit: 5000
        RateLimit: 1000
      Quota:
        Limit: 10000000
        Period: MONTH

  # Custom Domain (Optional)
  CustomDomain:
    Type: AWS::ApiGateway::DomainName
    Condition: HasCustomDomain
    Properties:
      DomainName: !Ref DomainName
      RegionalCertificateArn: !Ref CertificateArn
      EndpointConfiguration:
        Types:
          - REGIONAL

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: HasCustomDomain
    Properties:
      DomainName: !Ref CustomDomain
      RestApiId: !Ref RestAPI
      Stage: !Ref APIStage

Conditions:
  HasCustomDomain: !Not [!Equals [!Ref DomainName, ""]]

Outputs:
  APIEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${RestAPI}.execute-api.${AWS::Region}.amazonaws.com/${EnvironmentName}
    Export:
      Name: !Sub ${AWS::StackName}-APIEndpoint

  CustomDomainEndpoint:
    Condition: HasCustomDomain
    Description: Custom domain endpoint URL
    Value: !Sub https://${DomainName}
    Export:
      Name: !Sub ${AWS::StackName}-CustomDomainEndpoint

